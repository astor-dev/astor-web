---
import { FaClock, FaBookmark, FaUser } from "react-icons/fa";
import type { PostEntry } from "~/types/post.type";
import dayjs from "dayjs";
import Tag from "~components/Tag/Tag";
import { remark } from "remark";
import strip from "strip-markdown";
import HoverableImage from "~components/Image/HoverableImage";

interface Props extends PostEntry {
  className?: string;
}

const { className = "", data, id, body } = Astro.props;

const formatDate = (date: string) => {
  return dayjs(date).format("YYYY.MM.DD");
};

// 마크다운 본문을 텍스트로 변환
const processedBody = await remark()
  .use(strip)
  .process(body)
  .then(result => result.toString())
  .catch(() => "");

// 본문을 100자로 제한하고 말줄임표 추가
const description =
  processedBody.length > 100
    ? processedBody.slice(0, 100) + "..."
    : processedBody;
---

<a
  href={`/blog/posts/${id}`}
  class:list={["group block w-full px-3 md:py-2", className]}
>
  <article class="my-3 flex items-stretch gap-4 md:my-6 md:gap-6">
    {/* 텍스트 컨테이너 */}
    <div class="flex min-w-0 flex-1 flex-col overflow-hidden">
      <div>
        <h3
          class="line-clamp-1 text-base font-bold text-black-accent transition-all duration-300 ease-in-out group-hover:text-skin-accent md:text-xl"
        >
          {data.title}
        </h3>
        <p
          class="mt-3 line-clamp-3 text-xs text-black-base md:line-clamp-2 md:text-base"
        >
          {description}
        </p>
      </div>

      <div class="mt-2 flex flex-col gap-2 md:mt-4 md:gap-3">
        {/* 태그 영역 */}
        <div class="flex flex-wrap gap-1.5">
          {
            data.tags.map((tag: string) => (
              <Tag client:load tag={tag} size="responsive" theme="secondary" />
            ))
          }
        </div>

        {/* 메타 정보 */}
        <div
          class="flex items-center gap-3 text-[11px] text-black-muted md:gap-4 md:text-xs"
        >
          <div class="flex items-center">
            <FaClock
              className="mr-1 h-2.5 w-2.5 opacity-70 md:mr-1.5 md:h-3 md:w-3"
            />
            <time datetime={data.createdAt}>{formatDate(data.createdAt)}</time>
          </div>
          <span class="flex items-center">
            <FaUser
              className="mr-1 h-2.5 w-2.5 opacity-70 md:mr-1.5 md:h-3 md:w-3"
            />
            {data.author}
          </span>
        </div>
      </div>
    </div>

    <div
      class="relative h-20 w-20 shrink-0 overflow-hidden rounded-md md:h-32 md:w-auto"
      style="aspect-ratio: 4 / 3;"
    >
      <HoverableImage
        src={data.ogImage?.toString() || "/default-blog-image.jpg"}
        alt={data.title}
        client:load
      />
    </div>
  </article>
</a>
