---
import { repositoryContainer } from "~modules/repository.module";
import {
  POST_REPOSITORY,
  type PostRepository,
} from "~modules/repositories/posts/PostRepository";
import { POST_PER_PAGE } from "~common/constants/page";
import { navItems } from "~common/constants/blog";
import PostList from "~features/blog/layouts/post-list.astro";
import Layout from "~common/layouts/base-layout.astro";
import ModernTextHero from "~common/components/heros/modern-text-hero";
import BlogCenterNav from "~features/blog/components/blog-center-nav.astro";

export async function getStaticPaths() {
  const postRepository =
    repositoryContainer.get<PostRepository>(POST_REPOSITORY);
  const allPosts = await postRepository.getPosts({
    sort: { by: "createdAt", order: "desc" },
    filter: { draft: false },
  });
  const totalPages = Math.ceil(allPosts.total / POST_PER_PAGE);

  return Array.from({ length: totalPages }, (_, i) => ({
    params: { page: (i + 1).toString() },
    props: { page: i + 1 },
  }));
}

const { page } = Astro.props;
---

<Layout title="블로그">
  <ModernTextHero
    title="*Tech* Blog"
    content="직접 구현하고 검토를 거친 기술적 선택과 설계를 정리해 남깁니다"
    client:load
  />
  <BlogCenterNav items={navItems} currentPath="/blog" />
  <PostList page={page} />
</Layout>
