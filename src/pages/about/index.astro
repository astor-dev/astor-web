---
import {
  EDUCATIONS,
  FEATURED_STACK_IDS,
  ABOUT_ME,
  CERTIFICATIONS,
} from "~common/constants/about";
import profileImage from "~assets/images/profile.webp";
import type { ProjectEntry } from "~common/types/project.type";
import { repositoryContainer } from "~modules/repository.module";
import {
  PROJECT_REPOSITORY,
  type ProjectRepository,
} from "~modules/repositories/projects/ProjectRepository";
import {
  ACTIVITY_REPOSITORY,
  ActivityRepository,
} from "~modules/repositories/activities/ActivityRepository";
import {
  CareerRepository,
  CAREER_REPOSITORY,
} from "~modules/repositories/careers/CareerRepository";
import Layout from "~common/layouts/base-layout.astro";
import ProfileHeader from "~features/about/components/profile-header.astro";
import SlottedHeader from "~common/components/headers/slotted-header.astro";
import PortfolioList from "~features/about/components/portfolio-list.astro";
import EducationList from "~features/about/components/education-list.astro";
import CertificationList from "~features/about/components/certification-list.astro";

const projectRepository =
  repositoryContainer.get<ProjectRepository>(PROJECT_REPOSITORY);
const activitiesRepository =
  repositoryContainer.get<ActivityRepository>(ACTIVITY_REPOSITORY);
const careersRepository =
  repositoryContainer.get<CareerRepository>(CAREER_REPOSITORY);

const activities = await activitiesRepository.getActivities({
  sort: {
    field: "endedAt",
    order: "desc",
  },
});
const careers = await careersRepository.getCareers({
  sort: {
    field: "endedAt",
    order: "desc",
  },
});
const relatedProjects: Record<number, ProjectEntry[]> = {};
for (const stackId of FEATURED_STACK_IDS) {
  const projects = await projectRepository.getProjects({
    filter: {
      stackIds: [stackId],
    },
    sort: {
      field: "endedAt",
      order: "desc",
    },
  });
  relatedProjects[stackId] = projects.items;
}
---

<Layout title="About Me">
  <article class="mx-auto w-full">
    <div class="mx-auto w-full max-w-6xl px-4 pb-4">
      <ProfileHeader
        name="Astor"
        realName="김도훈"
        role="Software Engineer"
        imageSrc={profileImage.src}
        info={{
          // birth: "2001.12.10",
          phone: "010-3335-7862",
          email: "orangnlp@gmail.com",
          education: {
            school: EDUCATIONS[0].school,
            majors: EDUCATIONS[0].majors,
            year: EDUCATIONS[0].startedAt + " - " + EDUCATIONS[0].endedAt,
          },
          // location: "Seoul, Korea",
          github: "astor-dev",
          website: "https://astor-dev.com",
        }}
      />

      <div>
        <SlottedHeader title="About Me">
          <p
            class="text-sm leading-relaxed text-black-base"
            set:html={ABOUT_ME}
          />
        </SlottedHeader>
      </div>

      <SlottedHeader title="Careers">
        <div>
          {
            careers.items.map((career, index) => (
              <>
                <PortfolioList props={career} />
                {index !== careers.items.length - 1 && <hr class="my-4" />}
              </>
            ))
          }
        </div>
      </SlottedHeader>

      <SlottedHeader title="Activities">
        <div>
          {
            activities.items.map((activity, index) => (
              <>
                <PortfolioList props={activity} />
                {index !== activities.items.length - 1 && <hr class="my-4" />}
              </>
            ))
          }
        </div>
      </SlottedHeader>
      <SlottedHeader title="Education">
        <div>
          {
            EDUCATIONS.map((education, index) => (
              <>
                <EducationList education={education} />
                {index !== EDUCATIONS.length - 1 && <hr class="my-4" />}
              </>
            ))
          }
        </div>
      </SlottedHeader>
      <SlottedHeader title="Certifications">
        <div class="grid grid-cols-1 gap-4 sm:grid-cols-3">
          {
            CERTIFICATIONS.map(certification => (
              <CertificationList certification={certification} />
            ))
          }
        </div>
      </SlottedHeader>

      <!-- <SectionWithHeader title="Contact">
        <div
          class="prose prose-sm max-w-none md:prose lg:prose-lg prose-headings:text-black-accent"
        >
          <ul>
            <li>
              Email: <a href="mailto:astoir@example.com">astoir@example.com</a>
            </li>
            </li>
            <li>
              LinkedIn: <a
                href="https://linkedin.com/in/astoir"
                target="_blank"
                rel="noopener noreferrer">linkedin.com/in/astoir</a
              >
            </li>
          </ul>
        </div>
      </SectionWithHeader> -->
    </div>
  </article>
</Layout>
