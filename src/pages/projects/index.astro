---
import Layout from "~layouts/BaseLayout.astro";
import ProjectCard from "~components/Card/ProjectCard";
import { ProjectTypeEnum, type ProjectEntry } from "~types/project.type";
import { repositoryContainer } from "~modules/repository.module";
import {
  PROJECT_REPOSITORY,
  type ProjectRepository,
} from "~modules/repositories/projects/ProjectRepository";
import type { Paginated } from "~types/page.type";
import ModernBlogHero from "~components/Hero/ModernBlogHero";
const projectRepository =
  repositoryContainer.get<ProjectRepository>(PROJECT_REPOSITORY);
const projects: Paginated<ProjectEntry> = await projectRepository.getProjects();

// 프로젝트 타입별로 분류
const companyProjects = projects.items.filter(
  p => p.data.projectType === "Company-project",
);
const sideProjects = projects.items.filter(
  p => p.data.projectType === "Side-project",
);
const toyProjects = projects.items.filter(
  p => p.data.projectType === "Toy-project",
);
---

<Layout title="프로젝트">
  <ModernBlogHero
    title="*Projects*"
    content="여태 진행한 프로젝트들을 소개합니다"
    client:load
  />
  <div class="mx-auto w-full">
    <!-- 회사 프로젝트 섹션 -->
    {
      companyProjects.length > 0 && (
        <section class="mb-24 px-8">
          <div class="mb-12">
            <h2 class="mb-4 text-3xl font-bold text-black-accent">
              회사 프로젝트
            </h2>
            <p class="text-lg text-black-base/80">
              실무에서 진행한 프로젝트들입니다
            </p>
          </div>
          <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
            {companyProjects.map(project => (
              <ProjectCard
                {...project}
                client:load
                showInitialAnimation={true}
              />
            ))}
          </div>
        </section>
      )
    }

    <!-- 사이드 프로젝트 섹션 -->
    {
      sideProjects.length > 0 && (
        <section class="mb-24 px-8 py-24">
          <div class="mb-12">
            <h2 class="mb-4 text-3xl font-bold text-black-accent">
              사이드 프로젝트
            </h2>
            <p class="text-lg text-black-base/80">
              개인적으로 진행한 프로젝트들입니다
            </p>
          </div>
          <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
            {sideProjects.map(project => (
              <ProjectCard
                {...project}
                client:load
                showInitialAnimation={true}
              />
            ))}
          </div>
        </section>
      )
    }

    <!-- 토이 프로젝트 섹션 -->
    {
      toyProjects.length > 0 && (
        <section class="mb-24 px-8">
          <div class="mb-12">
            <h2 class="mb-4 text-3xl font-bold text-black-accent">
              토이 프로젝트
            </h2>
            <p class="text-lg text-black-base/80">
              학습과 실험을 위한 작은 프로젝트들입니다
            </p>
          </div>
          <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
            {toyProjects.map(project => (
              <ProjectCard
                {...project}
                client:load
                showInitialAnimation={true}
              />
            ))}
          </div>
        </section>
      )
    }
  </div>
</Layout>

<style>
  section {
    scroll-margin-top: 2rem;
  }
</style>
