---
import { POST_PER_PAGE } from "~common/constants/page";
import { isDefined } from "~common/utils/types.utils";
import BlogPostItem from "~features/blog/components/posts/blog-post-item.astro";
import PostPagination from "~features/blog/components/posts/post-pagination";
import MobileTagScroll from "~features/blog/components/tags/mobile-tag-scroll";
import TagSidebar from "~features/blog/components/tags/tag-sidebar";
import {
  PostRepository,
  POST_REPOSITORY,
} from "~modules/repositories/posts/PostRepository";
import { repositoryContainer } from "~modules/repository.module";

interface Props {
  currentTag?: string;
  page: number;
}
const { currentTag, page }: Props = Astro.props;

const postRepository = repositoryContainer.get<PostRepository>(POST_REPOSITORY);
const posts = await postRepository.getPosts({
  filter: {
    tags: isDefined(currentTag) ? [currentTag] : undefined,
    draft: false,
  },
  paging: { page, limit: POST_PER_PAGE },
});
const totalPosts = (
  await postRepository.getPosts({
    filter: {
      draft: false,
    },
  })
).total;
const tags = await postRepository.getAllTags();
---

<div class="mx-auto w-full">
  <div class="grid grid-cols-1 md:grid-cols-4 md:gap-8">
    <!-- 메인 콘텐츠 영역: 포스트 목록 -->
    <main class="col-span-3">
      {/* 선택된 태그가 있다면, 상단에 태그명을 표시 */}
      <MobileTagScroll
        tags={tags}
        totalPosts={totalPosts}
        client:load
        className="md:hidden"
      />

      {
        (
          <div class="mb-8">
            <h2 class="text-2xl font-bold text-black-accent">
              {currentTag ? `태그: ${currentTag}` : "전체 게시글"}
              <span class="text-sm text-black-muted">({posts.total})</span>
            </h2>
          </div>
        )
      }

      {/* 포스트 섹션 */}
      <section class="mb-12">
        {posts.items.map(post => <BlogPostItem {...post} />)}
      </section>
    </main>
    <!-- 우측 사이드바: React 기반 태그 목록 컴포넌트 -->
    <aside class="col-span-2 md:col-span-1">
      <TagSidebar
        tags={tags}
        totalPosts={totalPosts}
        currentTag={currentTag}
        client:load
        className="hidden md:block"
      />
    </aside>
  </div>
</div>
<!-- 페이지네이션을 화면 중앙에 배치 -->
<div class="mt-8 flex justify-center">
  <PostPagination
    currentPage={page}
    totalPages={Math.ceil(posts.total / POST_PER_PAGE)}
    currentTag={currentTag}
    client:load
  />
</div>
