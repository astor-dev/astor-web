---
import Layout from "~layouts/BaseLayout.astro";
import dayjs from "dayjs";
import type { CollectionEntry } from "astro:content";
import { render } from "astro:content";
import type { ProjectEntry } from "~types/project.type";
import { repositoryContainer } from "~modules/repository.module";
import {
  PROJECT_REPOSITORY,
  type ProjectRepository,
} from "~modules/repositories/projects/ProjectRepository";
import ImageWithSkeleton from "~components/Skeleton/ImageWithSkeleton";
import { FaCalendar, FaBuilding } from "react-icons/fa";
import IconButton from "~components/Button/IconButton";
import StackSlider from "~components/Slider/StackSlider";
import StickyTableOfContents from "~components/Nav/StickyTableOfContents.astro";
import StickyButtons from "~components/Nav/StickyButtons.astro";
interface Props {
  project: CollectionEntry<"projects">;
  isAdmin: boolean;
}

const { project, isAdmin } = Astro.props;

if (!project) {
  return Astro.redirect("/404");
}

const { Content , headings } = await render(project);

// const readTime = Math.ceil((project.body?.length as number) / 1000);
const period = `${dayjs(project.data.startedAt).format("YYYY.MM")} - ${
  project.data.endedAt
    ? dayjs(project.data.endedAt).format("YYYY.MM")
    : "진행중"
}`;

// 각 스택별 관련 프로젝트 가져오기
const projectRepository =
  repositoryContainer.get<ProjectRepository>(PROJECT_REPOSITORY);
const relatedProjects: Record<number, ProjectEntry[]> = {};
for (const stackId of project.data.stackIds) {
  const projects = await projectRepository.getProjects({
    filter: {
      stackIds: [stackId],
    },
    sort: {
      field: "startedAt",
      order: "desc",
    },
  });
  relatedProjects[stackId] = projects.items;
}
---

<Layout title={project.data.projectName} image={project.data.imageUrl}>
  <!-- Hero 섹션: 전체 화면을 채우면서 프로젝트 요약 정보를 보여줌 -->
  <section
    slot="hero"
    class="relative h-[250px] w-full overflow-hidden md:h-[400px]"
  >
    <!-- 배경 이미지 (절대 위치로 부모 안에 배치) -->
    <div class="absolute inset-0 z-0">
      <ImageWithSkeleton
        src={project.data.imageUrl}
        alt={project.data.projectName}
        className="h-full w-full object-cover"
        client:load
      />
    </div>

    <!-- 배경 오버레이 (이미지 위) -->
    <div class="absolute inset-0 z-10 bg-black opacity-80"></div>

    <!-- 중앙 콘텐츠 (최상위, 이미지 위에 겹침) -->
    <div
      id="hero-content"
      class="relative z-20 flex h-full flex-col items-center justify-center px-4 text-center transition-opacity duration-700"
    >
      <div class="text-skin-base">{project.data.projectType}</div>
      <h1 class="mb-6 mt-2 text-5xl font-bold text-white-accent">
        {project.data.projectName}
      </h1>
      <p class="mb-4 flex items-center gap-4 text-sm text-black-muted">
        <span class="flex items-center gap-2"
          ><FaCalendar className="h-4 w-4" />{period}</span
        >
        <span class="flex items-center gap-2"
          ><FaBuilding className="h-4 w-4" />{project.data.companyName}</span
        >
      </p>
    </div>
  </section>

  <!-- 프로젝트 상세 내용 -->
  <article class="relative mx-auto mb-10">
    <div class="prose prose-sm md:prose ">
      <!-- 프로젝트 기본 정보 -->
      <div class="not-prose">
        <section
          class="flex flex-col justify-between gap-4 py-4 sm:flex-row sm:items-center"
        >
          <p
            class="border-l-4 border-skin-accent pl-4 text-base leading-relaxed text-black-base"
          >
            {project.data.shortDescription}
          </p>
          <div class="flex shrink-0 flex-col items-end gap-3">
            {
              isAdmin && (
                <IconButton
                  icon="FiEdit"
                  text="프로젝트 수정"
                  href={`/admin/projects/${project.id}/edit`}
                  variant="primary"
                  size="sm"
                  client:load
                />
              )
            }
            <IconButton
              icon="FiExternalLink"
              text="사이트 방문"
              href={project.data.siteUrl}
              target="_blank"
              variant={project.data.siteUrl ? "primary" : "muted"}
              disabled={!project.data.siteUrl}
              rel="noopener noreferrer"
              size="sm"
              client:load
            />
          </div>
        </section>
        <!-- 기술 스택 섹션 -->
        <section class="transition-all duration-700">
          <h2 class="my-4 text-lg font-bold text-black-accent">사용 기술</h2>
          <StackSlider
            stackIds={project.data.stackIds}
            relatedProjects={relatedProjects}
            client:load
          />
        </section>
      </div>
      <StickyTableOfContents class="hidden xl:block" headings={headings} />
      <StickyButtons class="hidden xl:block" />

      {/* 마크다운 콘텐츠 */}
      <div>
        <Content />
      </div>
    </div>
  </article>
</Layout>

<style>
  /* 4:3 비율 유지를 위한 유틸리티 클래스 */
  :global(.aspect-4\/3) {
    aspect-ratio: 4 / 3;
  }

  @media (max-height: 600px) {
    :global(.aspect-4\/3) {
      min-height: 200px;
    }
  }

  @media (min-height: 1200px) {
    :global(.aspect-4\/3) {
      max-height: 700px;
    }
  }
</style>
