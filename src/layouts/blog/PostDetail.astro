---
import type { PostEntry } from "~types/post.type";
import Layout from "~layouts/BaseLayout.astro";
import dayjs from "dayjs";
import { render } from "astro:content";
import HeadingsTable from "~components/Table/HeadingsTable.astro";
import PostHero from "~components/Hero/PostHero.astro";
import StickyTableOfContents from "~components/Nav/StickyTableOfContents.astro";
import StickyButtons from "~components/Nav/StickyButtons.astro";
import Comments from "~components/List/Comments.tsx";
import Footer from "~components/Footer/Footer.astro";
interface Props {
  post: PostEntry;
  isAdmin: boolean;
  latestPosts: PostEntry[];
}

const { post, latestPosts } = Astro.props;

if (!post) {
  return Astro.redirect("/404");
}

const renderResult = await render(post);
const Content = renderResult.Content;
const headings = renderResult.headings;

const formattedDate = dayjs(post.data.createdAt).format("YYYY년 MM월 DD일");
---

<Layout title={post.data.title} image={post.data.ogImage}>
  <PostHero post={post} slot="hero" />

  <article class="relative mx-auto mb-10">
    <div class="relative flex">
      {/* 본문 */}
      <div class="prose prose-sm mx-auto max-w-none md:prose">
        <HeadingsTable class="block xl:hidden" headings={headings} />
        {/* 마크다운 콘텐츠 */}
        <div>
          <Content />
          <Comments client:only="react" />
        </div>
      </div>
      <StickyTableOfContents class="hidden xl:block" headings={headings} />
      <StickyButtons class="hidden xl:block" />
    </div>
  </article>
  <Footer slot="footer" latestPosts={latestPosts} />
</Layout>
